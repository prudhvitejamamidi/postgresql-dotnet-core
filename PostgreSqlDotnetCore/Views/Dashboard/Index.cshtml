@model PostgreSqlDotnetCore.Models.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}
<header>
    <nav>
        <ul>
            <li><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
            <li><a href="@Url.Action("Index", "Expense")">Expenses</a></li>
            <li><a href="@Url.Action("Index", "About")">About</a></li>
        </ul>
        <div class="user-profile">
            @if (TempData !=null)
            {
                
                <a href="@Url.Action("Logout", "Home")">Logout</a>
            }
            else
            {
                <a href="@Url.Action("Login", "Home")">Login</a>
            }
        </div>
    </nav>
</header>


<div class="dashboard">
    <h2>Welcome, @Model.UserName!</h2>
    <h2>Your Dashboard</h2>
    <div class="dashboard-content">
        <div class="budget-input">
            <h3>Set Your Monthly Budget</h3>
            <form asp-action="SetBudget" method="post">
                <input type="number" asp-for="MonthlyBudget" id="monthly-budget-input" placeholder="Enter your monthly budget" />
                <button type="submit" id="set-budget-button">Set Budget</button>
            </form>
            <div class="card">
                <h3>Monthly Budget</h3>
                <p id="monthly-budget">@Model.MonthlyBudget.ToString("C")</p>
            </div>
            <div class="card">
                <h3>Expenses This Month</h3>
                <p id="monthly-expenses">@Model.MonthlyExpenses.ToString("C")</p>
            </div>
            <div class="card">
                <h3>Remaining Budget</h3>
                <p id="remaining-budget">@Model.RemainingBudget.ToString("C")</p>
            </div>
        </div>
        <div class="expense-chart">
            <h3>Expense Breakdown</h3>
            <canvas id="expenseChart"></canvas>
        </div>
    </div>
</div>

@*@section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>// Initialize the expense chart
            const ctx = document.getElementById('expenseChart').getContext('2d');
            const expenseChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Groceries', 'Rent', 'Transportation', 'Entertainment'],
                    datasets: [{
                        label: 'Expenses',
                        data: [500, 800, 300, 200],
                        backgroundColor: ['#4CAF50', '#2196F3', '#FF9800', '#E91E63']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });</script>
    }*@
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Initialize the expense chart
        const ctx = document.getElementById('expenseChart').getContext('2d');
        const expenseChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.ExpenseData.Keys)),
                datasets: [{
                    label: 'Expenses',
                    data: @Html.Raw(Json.Serialize(Model.ExpenseData.Values)),
                    backgroundColor: ['#4CAF50', '#2196F3', '#FF9800', '#E91E63','#E91E50']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });
    </script>
}
